name: Build

on:
  [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04', 'ubuntu-24.04', 'macos-13', 'macos-latest', 'windows-latest']
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        cache: 'true'
        version: '6.6.*'
    - name: Install dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install ninja-build libfuse2
    - name: Install dependencies
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install node ninja
        npm install -g appdmg
    - name: Set CodeSign Certificate macOS
      if: ${{ runner.os  == 'macOS' }} 
      uses: apple-actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
        p12-password: ${{ secrets.MACOS_CERTIFICATE_PSSW }}
    - name: Set CodeSign Certificate Windows
      shell: powershell
      if: ${{ runner.os == 'Windows' }}
      run: |
        New-Item -ItemType directory -Path certificate
        Set-Content -Path certificate\certificate.txt -Value '${{ secrets.WIN_CERTIFICATE }}'
        certutil -decode certificate\certificate.txt certificate\certificate.pfx
    - name: Build
      shell: bash
      run: |
        bash scripts/${{ runner.os }}/1_build.sh
    - name: Deploy
      shell: bash
      run: |
        bash scripts/${{ runner.os }}/2_deploy.sh --cert_pssw='${{ secrets.WIN_CERTIFICATE_PSSW }}' --cert_id='${{ secrets.MACOS_CERT_ID }}'
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: install_${{ matrix.os }}
        path: install/
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: packages_${{ matrix.os }}
        path: packages/